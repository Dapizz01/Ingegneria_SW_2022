Nello stesso path dei file .java:
>javac MainDemo.java
>java -classpath ".;sqlite-jdbc-3.27.2.1.jar" MainDemo.java su Windows
>java -classpath ".:sqlite-jdbc-3.27.2.1.jar" MainDemo.java su Linux/MAC

2.2. Date and Time Datatype
SQLite does not have a storage class set aside for storing dates and/or times. Instead, the built-in Date And Time Functions of SQLite are capable of storing dates and times as TEXT, REAL, or INTEGER values:

    TEXT as ISO8601 strings ("YYYY-MM-DD HH:MM:SS.SSS").
    REAL as Julian day numbers, the number of days since noon in Greenwich on November 24, 4714 B.C. according to the proleptic Gregorian calendar.
    INTEGER as Unix Time, the number of seconds since 1970-01-01 00:00:00 UTC.
Applications can choose to store dates and times in any of these formats and freely convert between formats using the built-in date and time functions.


            //------------------Selezione---------------
            stmt = c.createStatement();
            ResultSet rs = stmt.executeQuery( "SELECT * FROM Dipendenti;" );

            while ( rs.next() ) {
                int id_dipendente = rs.getInt("ID_Dipendente");
                String nome = rs.getString("Nome");
                String cognome  = rs.getString("Cognome");
                Date data_nascita = rs.getDate("Data_nascita");
                String n_telefono = rs.getString("N_telefono");
                String email = rs.getString("Email");
                String user = rs.getString("User");
                String password = rs.getString("Password");
                String comune_nascita = rs.getString("Comune_nascita");

                System.out.println( "ID_Dipendente = " + id_dipendente );
                System.out.println( "Nome = " + nome );
                System.out.println( "Cognome = " + cognome );
                System.out.println( "Data di nascita = " + data_nascita );
                System.out.println( "Numero di Telefono = " + n_telefono );
                System.out.println( "Email = " + email );
                System.out.println( "User = " + user);
                System.out.println( "Password = " + password );
                System.out.println( "Comune di nascita = " + comune_nascita );
                System.out.println();
            }
            rs.close();
            //----------------------------------------------------
            stmt.close();

                    /*
                    Scanner keyboard = new Scanner(System.in);
                    System.out.print("Inseirire user da cercare nel db: ");
                    String user = keyboard.nextLine();
                    System.out.print("Inseirire password da cercare nel db: ");
                    String password = keyboard.nextLine();

                    LoginDao loginDao = new LoginDaoImpl();
                    boolean v = loginDao.verificaLogin(new Login(user, password));

                    System.out.println("Risultato: " + v);

                    PatentiDao patentiDao = new PatentiDaoImpl();

                    for(Patente patente : patentiDao.getPatenti()) {
                        System.out.println("NomePatente: " + patente.getNomePatente());
                    }

                    LingueDao lingueDao = new LingueDaoImpl();

                    for(Lingua lingua : lingueDao.getLingue()) {
                        System.out.println("NomeLingua: " + lingua.getNomeLingua());
                    }

                    ComuniDao comuniDao = new ComuniDaoImpl();

                    for(Comune comune : comuniDao.getComuni()) {
                        System.out.println("NomeComune: " + comune.getNomeComune());
                    }

                    SpecializzazioniDao specializzazioniDao = new SpecializzazioniDaoImpl();

                    for(Specializzazione specializzazione : specializzazioniDao.getSpecializzazioni()) {
                        System.out.println("NomeSpecializzaione: " + specializzazione.getNomeSpecializzazione());
                    }

                    */

                                /*
                            Scanner keyboard = new Scanner(System.in);
                            System.out.print("Inserire NomeLavoratore da cercare nel db: ");
                            String nomeLavoratore = keyboard.nextLine();
                            System.out.print("Inserire e CognomeLavoratore da cercare nel db: ");
                            String cognomeLavoratore = keyboard.nextLine();

                            List<Lavoratore> lavoratoriCercati;
                            lavoratoriCercati = lavoratoriDao.getLavoratori(nomeLavoratore, cognomeLavoratore);

                            if (lavoratoriCercati.isEmpty())
                                System.out.println("Nessun lavoratore trovato con quel nome e cognome!");

                            for (Lavoratore lavoratore1 : lavoratoriCercati) {
                                System.out.println("ID_Lavoratore: " + lavoratore1.getID());
                                System.out.println("NomeLavoratore: " + lavoratore1.getNomeLavoratore());
                                System.out.println("ComuneNascita: " + lavoratore1.getComuneNascita().getNomeComune());
                                System.out.println();

                                System.out.println("Esperienze che ha fatto: ");
                                for (Esperienza esperienza : lavoratore1.getEsperienze()) {
                                    System.out.println("ID_Esperienza: " + esperienza.getID());
                                    System.out.println("NomeAzienda: " + esperienza.getNomeAzienda());
                                    System.out.println("NomeComune: " + esperienza.getComune().getNomeComune());
                                    System.out.println("Specializzazione: " + esperienza.getSpecializzazione().getNomeSpecializzazione());
                                }
                                System.out.println();

                                System.out.println("Contatti che possiede: ");
                                for (Contatto contatto : lavoratore1.getContatti()) {
                                    System.out.println("ID_Contatto: " + contatto.getID());
                                    System.out.println("NomeContatto: " + contatto.getNomeContatto());
                                }
                                System.out.println();

                                System.out.println("Lingue conosciute: ");
                                for (Lingua lingua : lavoratore1.getLingue()) {
                                    System.out.println("Nome Lingua: " + lingua.getNomeLingua());
                                }
                                System.out.println();

                                System.out.println("Patenti possedute: ");
                                for (Patente patente : lavoratore1.getPatenti()) {
                                    System.out.println("ID_Contatto: " + patente.getNomePatente());
                                }
                                System.out.println();

                                System.out.println("Le sue disponibilità: ");
                                for (Disponibilita disponibilita : lavoratore1.getDisponibilita()) {
                                    System.out.println("ID_Comune: " + disponibilita.getComune().getNomeComune());
                                    System.out.println("InizioPeriodo: " + disponibilita.getInizioPeriodo());
                                }
                                System.out.println();
                            }

                            */

                            /*
                            Scanner keyboard = new Scanner(System.iùn);
                            System.out.print("Inserire ID del lavoratore che si vuole eliminare dal db: ");
                            int id = keyboard.nextInt();
                            System.out.println("Lavoratore eliminato?: " + lavoratoriDao.deleteLavoratore(id));

                            prova();
                            */

                            /*
                            prova();

                            Lavoratore lavoratore3 = new Lavoratore(1,
                                    "Manuel",
                                    "De Marchi",
                                    comuniNelDb.get(3),
                                    comuniNelDb.get(2),
                                    5000,
                                    lingueNelDb.get(1),
                                    "mirko_demarchi@libero.it",
                                    "1834567823",
                                    true,
                                    esperienze2,
                                    lingueParlate2,
                                    contatti2,
                                    patentiPossedute2,
                                    disponibilitaLista2);
                            System.out.println("Lavoratore modificato?: " + lavoratoriDao.updateLavoratore(lavoratore3));

                            prova();
                            */

                                   /*
                                    Scanner keyboard = new Scanner(System.in);
                                    System.out.print("Inserire id del lavoratore da cercare nel db: ");
                                    int id = keyboard.nextInt();
                                    Lavoratore lavoratoreCercato = lavoratoriDao.getLavoratore(id);
                                    if(lavoratoreCercato != null) {
                                        System.out.println("ID_Lavoratore: " + lavoratoreCercato.getID());
                                        System.out.println("NomeLavoratore: " + lavoratoreCercato.getNomeLavoratore());
                                        System.out.println("ComuneNascita: " + lavoratoreCercato.getComuneNascita().getNomeComune());
                                        System.out.println();

                                        System.out.println("Esperienze che ha fatto: ");
                                        for (Esperienza esperienza : lavoratoreCercato.getEsperienze()) {
                                            System.out.println("ID_Esperienza: " + esperienza.getID());
                                            System.out.println("NomeAzienda: " + esperienza.getNomeAzienda());
                                            System.out.println("NomeComune: " + esperienza.getComune().getNomeComune());
                                            System.out.println("Specializzazione: " + esperienza.getSpecializzazione().getNomeSpecializzazione());
                                        }
                                        System.out.println();

                                        System.out.println("Contatti che possiede: ");
                                        for (Contatto contatto : lavoratoreCercato.getContatti()) {
                                            System.out.println("ID_Contatto: " + contatto.getID());
                                            System.out.println("NomeContatto: " + contatto.getNomeContatto());
                                        }
                                        System.out.println();

                                        System.out.println("Lingue conosciute: ");
                                        for (Lingua lingua : lavoratoreCercato.getLingue()) {
                                            System.out.println("Nome Lingua: " + lingua.getNomeLingua());
                                        }
                                        System.out.println();

                                        System.out.println("Patenti possedute: ");
                                        for (Patente patente : lavoratoreCercato.getPatenti()) {
                                            System.out.println("ID_Contatto: " + patente.getNomePatente());
                                        }
                                        System.out.println();

                                        System.out.println("Le sue disponibilità: ");
                                        for (Disponibilita disponibilita : lavoratoreCercato.getDisponibilita()) {
                                            System.out.println("ID_Comune: " + disponibilita.getComune().getNomeComune());
                                            System.out.println("InizioPeriodo: " + disponibilita.getInizioPeriodo());
                                        }
                                        System.out.println();
                                    }
                                    else
                                        System.out.println("L'ID cercato non esiste");
                                    */